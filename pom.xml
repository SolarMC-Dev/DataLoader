
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>gg.solarmc</groupId>
		<artifactId>solar-parent</artifactId>
		<version>1.1.1</version>
	</parent>

	<groupId>gg.solarmc.loader</groupId>
	<artifactId>dataloader</artifactId>
	<version>0.6.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Solar-DataLoader</name>

	<properties>
		<omnibus.version>1.1.0-RC2</omnibus.version>
		<slf4j.version>1.7.30</slf4j.version>
		<junit.version>5.7.2</junit.version>
		<mockito.version>3.11.0</mockito.version>

		<mariadb-connector.version>2.7.3</mariadb-connector.version>
		<flyway.version>7.9.1</flyway.version>
		<jooq.version>3.15.1</jooq.version>

		<dazzleconf.version>1.2.0</dazzleconf.version>
		<caffeine.version>3.0.1</caffeine.version>
		<checker-qual.version>3.14.0</checker-qual.version>

		<jacoco.argLine />
	</properties>

	<scm>
		<developerConnection>scm:git:https://github.com/SolarMC-Dev/DataLoader.git</developerConnection>
	  <tag>HEAD</tag>
  </scm>

	<licenses>
		<license>
			<name>GNU Affero General Public License, Version 3</name>
			<url>https://www.gnu.org/licenses/agpl-3.0-standalone.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<dependencies>
						<dependency>
							<groupId>org.junit.jupiter</groupId>
							<artifactId>junit-jupiter-engine</artifactId>
							<version>${junit.version}</version>
							<scope>runtime</scope>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.2.0</version>
					<executions>
						<execution>
							<id>find-available-ports</id>
							<!-- Phase must be explicitly specified -->
							<phase>none</phase>
							<goals>
								<goal>reserve-network-port</goal>
							</goals>
							<configuration>
								<portNames>
									<portName>dataloader.database.port</portName>
								</portNames>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.37.0</version>
					<configuration>
						<showLogs>true</showLogs>
						<images>
							<image>
								<name>mariadb:10.6</name>
								<alias>mariadb</alias>
								<run>
									<env>
										<MARIADB_ALLOW_EMPTY_ROOT_PASSWORD>true</MARIADB_ALLOW_EMPTY_ROOT_PASSWORD>
									</env>
									<ports>
										<port>${dataloader.database.port}:3306</port>
									</ports>
									<wait>
										<time>60000</time>
										<log>Server socket created on IP: '::'</log>
									</wait>
								</run>
							</image>
						</images>
					</configuration>
					<executions>
						<execution>
							<id>start-database</id>
							<!-- Phase must be specified -->
							<phase>none</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>stop-database</id>
							<!-- Phase must be specified -->
							<phase>none</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<argLine>@{jacoco.argLine}</argLine>
					<systemPropertyVariables>
						<dataloader.it.database.port>${dataloader.database.port}</dataloader.it.database.port>
					</systemPropertyVariables>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${junit.version}</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>codecov</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.7</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<propertyName>jacoco.argLine</propertyName>
								</configuration>
							</execution>
							<execution>
								<id>report</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<modules>
		<module>core</module>
		<module>core-schema</module>
		<module>core-implementation</module>
		<module>mod-credits</module>
		<module>mod-prefs</module>
		<module>mod-kitpvp</module>
		<module>mod-clans</module>
		<module>mod-friends</module>
		<module>core-authentication</module>
    </modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>space.arim.omnibus</groupId>
				<artifactId>omnibus</artifactId>
				<version>${omnibus.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>space.arim.dazzleconf</groupId>
				<artifactId>dazzleconf-ext-snakeyaml</artifactId>
				<version>${dazzleconf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.ben-manes.caffeine</groupId>
				<artifactId>caffeine</artifactId>
				<version>${caffeine.version}</version>
			</dependency>
			<dependency>
				<groupId>gg.solarmc.streamer</groupId>
				<artifactId>streamer</artifactId>
				<version>0.1.2</version>
			</dependency>
			<dependency>
				<groupId>org.checkerframework</groupId>
				<artifactId>checker-qual</artifactId>
				<version>${checker-qual.version}</version>
				<optional>true</optional>
			</dependency>
			<!-- Self Dependencies -->
			<dependency>
				<groupId>gg.solarmc.loader</groupId>
				<artifactId>loader-core-schema</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>gg.solarmc.loader</groupId>
				<artifactId>loader-core-implementation</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>gg.solarmc.loader</groupId>
				<artifactId>loader-core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- Testing Dependencies -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-params</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>solar-repo</id>
			<url>https://repo.solarmc.gg/mvn</url>
		</repository>
	</repositories>
</project>
